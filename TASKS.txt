# BOXY THEME/ENGINE SYSTEM REFACTOR - TASK BREAKDOWN
# Generated: 2025-09-17
# Epic 1: Fix the broken theme/engine system

## ROADMAP OVERVIEW

### PHASE 1: Command Structure Refactor
Separate engine commands from theme commands, establish clear API boundaries

### PHASE 2: Engine File Management
Fix import/export functionality, enforce boxy_ prefix, handle file operations

### PHASE 3: Global Directory & Deployment
Fix hierarchy loading, ensure global themes are accessible, improve deploy.sh

### PHASE 4: Enhanced Debugging & Display
Better visibility into engine state, theme discovery, and visual presentation

### PHASE 5: Documentation & Testing
Update help menus, create tests, document new API

---

## MILESTONE 1: COMMAND RESTRUCTURE (Priority: HIGH)

### ENGINE-001: Create `boxy engine` subcommand structure [3 pts]
- Create new `boxy engine` namespace for config file management
- Commands to move from `theme` to `engine`:
  - `boxy theme init` -> `boxy engine init` (creates config files, not themes)
  - `boxy theme hierarchy` -> `boxy engine debug`
  - `boxy theme import` -> `boxy engine import`
  - `boxy theme export` -> `boxy engine export`
  - `boxy theme list` -> `boxy engine list`
  - `boxy theme edit` -> `boxy engine edit` (edits config files)
- Keep theme-specific commands under `theme`:
  - `boxy theme show <name>` (displays individual theme properties)
  - `boxy theme dryrun <name>` (tests individual theme rendering)
  - `boxy theme create <name>` (creates new theme within a config)

### ENGINE-002: Implement separate help menus [2 pts]
- Create dedicated help for `boxy engine --help`
- Update help for `boxy theme --help`
- Ensure clear distinction between engine config management and theme usage

### ENGINE-003: Add --use alias for --theme flag [1 pt]
- Allow both `--theme` and `--use` to work
- Update argument parser to handle both
- No deprecation warnings needed

---

## MILESTONE 2: ENGINE FILE OPERATIONS (Priority: HIGH)

### ENGINE-004: Fix import command with file handling [5 pts]
- Pattern: `boxy engine import <name>` looks for `boxy_<name>.yml` locally
- Copy to global `~/.local/etc/rsb/boxy/themes/` directory
- Add `--overwrite` or `--force` flag for existing files
- Without flag: error if file exists with message about using flag
- Optional: Create `.bak` backup on overwrite

### ENGINE-005: Fix export command with proper naming [3 pts]
- Pattern: `boxy engine export <name>` looks for `boxy_<name>.yml` in global
- Copy to current working directory
- Handle missing files gracefully with clear error messages

### ENGINE-006: Enforce boxy_ prefix for engine files [2 pts]
- Update file discovery to only look for `boxy_*.yml` or `boxy_*.yaml`
- Automatically exclude files containing 'template' or 'tmpl' in the name
- Update default file generation to use boxy_ prefix
- Migrate existing files or provide migration command

---

## MILESTONE 3: GLOBAL DIRECTORY & HIERARCHY (Priority: CRITICAL)

### ENGINE-007: Fix global theme directory loading [5 pts]
- Ensure `~/.local/etc/rsb/boxy/themes/` is checked in hierarchy
- Debug why themes aren't being loaded from global location
- Fix loading order to properly check all hierarchy levels

### ENGINE-008: Migrate and fix engine init command [3 pts]
- Move existing `boxy theme init` to `boxy engine init`
- Create global directory `~/.local/etc/rsb/boxy/themes/` if missing
- Generate default `boxy_default.yml` from embedded themes
- Fix current implementation that only creates local .themes/
- Report what was created and where

### ENGINE-009: Update deploy.sh for theme deployment [2 pts]
- Ensure deploy.sh copies default themes to global location
- Handle directory creation if needed
- Preserve user customizations

---

## MILESTONE 4: ENGINE DEBUG & DISPLAY (Priority: MEDIUM)

### ENGINE-010: Implement comprehensive engine debug command [5 pts]
- Move and rename `boxy theme hierarchy` to `boxy engine debug`
- Show:
  a. Check if global etc/boxy/themes directory is empty
  b. Width calculation method in use (unicode-width vs custom)
  c. List of discovered theme files with full paths
  d. Loading order and which file "wins"
  e. Total themes available across all configs

### ENGINE-011: Enhance engine list output [3 pts]
- Show all available themes with visual properties:
  - Theme name
  - Main icon (or â–¡ placeholder)
  - Text color name with ANSI color applied
  - Box style with colored box parts
  - Layout configurations (hl, sc, etc.)
- Group by source config file

### ENGINE-012: Add engine status command [2 pts]
- Quick summary of engine health
- Count of config files loaded
- Count of themes available
- Any errors or warnings

---

## MILESTONE 5: ERROR HANDLING & VALIDATION (Priority: MEDIUM)

### ENGINE-013: Improve error messages [2 pts]
- Clear messages when files not found
- Explain hierarchy when theme not found
- Suggest `engine init` when global dir missing

### ENGINE-014: Add config validation [3 pts]
- Validate YAML structure on import
- Check for required theme properties
- Warn about duplicate theme names across configs

### ENGINE-015: Add dry-run mode for import/export [2 pts]
- `--dry-run` flag to preview operations
- Show what would be copied where
- Useful for testing without side effects

---

## MILESTONE 6: TESTING & DOCUMENTATION (Priority: LOW)

### ENGINE-016: Create engine command tests [3 pts]
- Test import/export with various scenarios
- Test file overwrite protection
- Test hierarchy loading

### ENGINE-017: Update README with engine commands [2 pts]
- Document engine vs theme distinction
- Provide examples of common workflows
- Update command reference

### ENGINE-018: Create migration guide [1 pt]
- Help users migrate from old command structure
- Document file naming changes
- Provide troubleshooting tips

---

## STORY POINT SUMMARY

**MILESTONE 1 (Command Restructure):** 6 points
**MILESTONE 2 (File Operations):** 10 points
**MILESTONE 3 (Global Directory):** 10 points - CRITICAL
**MILESTONE 4 (Debug & Display):** 10 points
**MILESTONE 5 (Error Handling):** 7 points
**MILESTONE 6 (Testing & Docs):** 6 points

**TOTAL:** 49 story points

## PRIORITIZED EXECUTION ORDER

### SPRINT 1 (Critical Path - 16 pts)
1. ENGINE-008: Migrate and fix engine init [3 pts] - CREATE MISSING DIRECTORY
2. ENGINE-001: Create engine subcommand [3 pts] - ESTABLISH NAMESPACE
3. ENGINE-007: Fix global loading [5 pts] - ENSURE THEMES LOAD
4. ENGINE-004: Fix import command [5 pts]

### SPRINT 2 (Core Functionality - 15 pts)
5. ENGINE-005: Fix export command [3 pts]
6. ENGINE-010: Implement debug command [5 pts]
7. ENGINE-011: Enhance list output [3 pts]
8. ENGINE-002: Separate help menus [2 pts]
9. ENGINE-006: Enforce boxy_ prefix [2 pts]

### SPRINT 3 (Polish & Cleanup - 18 pts)
10. ENGINE-003: Add --use alias [1 pt]
11. ENGINE-009: Update deploy.sh [2 pts]
12. ENGINE-012: Add status command [2 pts]
13. ENGINE-013: Improve errors [2 pts]
14. ENGINE-014: Add validation [3 pts]
15. ENGINE-015: Add dry-run [2 pts]
16. ENGINE-016: Create tests [3 pts]
17. ENGINE-017: Update README [2 pts]
18. ENGINE-018: Migration guide [1 pt]

---

## COMMAND STRUCTURE (FINAL DECISION)

### Engine Commands (Config File Management):
- `boxy engine init` - Initialize global theme directory and default config
- `boxy engine import <name>` - Import boxy_<name>.yml to global location
- `boxy engine export <name>` - Export boxy_<name>.yml from global to local
- `boxy engine list` - List all available themes from all loaded configs
- `boxy engine debug` - Show hierarchy, width calc, discovered files (formerly hierarchy)
- `boxy engine status` - Quick health check of engine
- `boxy engine edit <name>` - Edit a config file

### Theme Commands (Individual Theme Operations):
- `boxy theme show <name>` - Display properties of a specific theme
- `boxy theme dryrun <name>` - Test theme with sample content
- `boxy theme create <name>` - Create new theme within a config

## NOTES

- ENGINE-008 must run first to create the missing global directory
- ENGINE-007 depends on ENGINE-008 completing successfully
- Import/Export need to be fixed together for consistency
- Debug command will be essential for troubleshooting issues
- Consider adding `boxy engine doctor` as future enhancement
- May need to handle backward compatibility for existing users

## SUCCESS CRITERIA

1. Global themes load correctly from hierarchy
2. Import/export work with boxy_ prefixed files
3. Clear separation between engine and theme commands
4. Users can debug loading issues with engine debug
5. Visual theme list helps users discover available styles